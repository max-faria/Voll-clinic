{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function usePost() {\n  _s();\n  const [erro, setErro] = useState('');\n  const [sucesso, setSucesso] = useState(false);\n  const [resposta, setResposta] = useState('start');\n  const [resData, setResData] = useState(null); // Novo estado para armazenar dados de 'res'\n\n  useEffect(() => {\n    if (resData) {\n      setResposta(resData.token); // Atualiza 'resposta' quando 'resData' muda\n      console.log(resposta);\n    }\n  }, [resData, resposta]);\n  async function cadastrarDados(_ref) {\n    let {\n      url,\n      dados,\n      token\n    } = _ref;\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n    try {\n      const res = await fetch(`http://localhost:8080/${url}`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(dados)\n      });\n      setSucesso(true);\n      const respostaConvertida = await res.json();\n      setResData(respostaConvertida);\n    } catch (erro) {\n      setErro('Não foi possível enviar os dados');\n    }\n  }\n  return {\n    cadastrarDados,\n    sucesso,\n    erro,\n    resposta\n  };\n}\n_s(usePost, \"YsxRy/i82CwK/9ntRMrnljBlGT8=\");","map":{"version":3,"names":["useEffect","useState","usePost","_s","erro","setErro","sucesso","setSucesso","resposta","setResposta","resData","setResData","token","console","log","cadastrarDados","_ref","url","dados","headers","res","fetch","method","body","JSON","stringify","respostaConvertida","json"],"sources":["/Users/maxfaria/Documents/GitHub/voll/web/src/usePost.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\ntype ApiResponse = {\n    token: string,\n}\n\nexport default function usePost() {\n    const [erro, setErro] = useState('');\n    const [sucesso, setSucesso] = useState(false);\n    const [resposta, setResposta] = useState('start');\n    const [resData, setResData] = useState<ApiResponse | null>(null); // Novo estado para armazenar dados de 'res'\n\n\n    useEffect(() => {\n        if (resData) {\n            setResposta(resData.token); // Atualiza 'resposta' quando 'resData' muda\n            console.log(resposta)\n        }\n    }, [resData, resposta]);\n\n    async function cadastrarDados<T>({url, dados, token} : \n        {url: string, dados: T, token?: string}) {\n            \n            const headers: HeadersInit = {\n                'Content-Type': 'application/json'\n            }\n            if (token) {\n                headers['Authorization'] = `Bearer ${token}`;\n            }\n\n            try {\n            const res = await fetch(`http://localhost:8080/${url}`, {\n                method: 'POST',\n                headers,\n                body: JSON.stringify(dados)\n            })\n            setSucesso(true);\n            const respostaConvertida = await res.json();\n            setResData(respostaConvertida)\n        } catch (erro) {\n        setErro('Não foi possível enviar os dados');\n    }\n}\n\nreturn {cadastrarDados, sucesso, erro, resposta}\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAM3C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAqB,IAAI,CAAC,CAAC,CAAC;;EAGlED,SAAS,CAAC,MAAM;IACZ,IAAIU,OAAO,EAAE;MACTD,WAAW,CAACC,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC;MAC5BC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACzB;EACJ,CAAC,EAAE,CAACE,OAAO,EAAEF,QAAQ,CAAC,CAAC;EAEvB,eAAeO,cAAcA,CAAAC,IAAA,EACgB;IAAA,IADZ;MAACC,GAAG;MAAEC,KAAK;MAAEN;IACJ,CAAC,GAAAI,IAAA;IAEnC,MAAMG,OAAoB,GAAG;MACzB,cAAc,EAAE;IACpB,CAAC;IACD,IAAIP,KAAK,EAAE;MACPO,OAAO,CAAC,eAAe,CAAC,GAAI,UAASP,KAAM,EAAC;IAChD;IAEA,IAAI;MACJ,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAE,yBAAwBJ,GAAI,EAAC,EAAE;QACpDK,MAAM,EAAE,MAAM;QACdH,OAAO;QACPI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK;MAC9B,CAAC,CAAC;MACFX,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMmB,kBAAkB,GAAG,MAAMN,GAAG,CAACO,IAAI,EAAE;MAC3ChB,UAAU,CAACe,kBAAkB,CAAC;IAClC,CAAC,CAAC,OAAOtB,IAAI,EAAE;MACfC,OAAO,CAAC,kCAAkC,CAAC;IAC/C;EACJ;EAEA,OAAO;IAACU,cAAc;IAAET,OAAO;IAAEF,IAAI;IAAEI;EAAQ,CAAC;AAChD;AAACL,EAAA,CAvCuBD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}