{"ast":null,"code":"var _jsxFileName = \"/Users/maxfaria/Documents/GitHub/voll/web/src/components/ModalCadastro/index.tsx\",\n  _s = $RefreshSig$();\nimport { Modal } from \"@mui/material\";\nimport Titulo from \"../Titulo\";\nimport { BoxCustomizado } from \"./styles\";\nimport { useState } from \"react\";\nimport usePost from \"../../usePost\";\nimport autenticaStore from \"../../stores/autentica.store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalCadastro(_ref) {\n  _s();\n  let {\n    open,\n    handleClose\n  } = _ref;\n  const [planosSelecionados, setPlanosSelecionados] = useState([]);\n  const [nome, setNome] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [senhaVerificada, setSenhaVerificada] = useState(\"\");\n  const [possuiPlano, setPossuiPlano] = useState(false);\n  const [imagem, setImagem] = useState('');\n  const [especialidade, setEspecialidade] = useState(\"\");\n  const [crm, setCrm] = useState(\"\");\n  const [cep, setCep] = useState(\"\");\n  const [rua, setRua] = useState(\"\");\n  const [numero, setNumero] = useState(\"\");\n  const [complemento, setComplemento] = useState(\"\");\n  const [estado, setEstado] = useState(\"\");\n  const [telefone, setTelefone] = useState(\"\");\n  const label = {\n    inputProps: {\n      'aria-label': 'Atende por plano?'\n    }\n  };\n  const {\n    cadastrarDados\n  } = usePost();\n  const {\n    usuario\n  } = autenticaStore;\n  const handleChange = event => {\n    const checkboxValue = event.target.value;\n    if (event.target.checked) {\n      setPlanosSelecionados([...planosSelecionados, checkboxValue]);\n    } else {\n      setPlanosSelecionados(planosSelecionados.filter(plano => plano !== checkboxValue));\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"Modal de cadastro do especialista\",\n    \"aria-describedby\": \"Nesse modal ter\\xE1 os dados de cadastro do especialista\",\n    children: /*#__PURE__*/_jsxDEV(BoxCustomizado, {\n      children: /*#__PURE__*/_jsxDEV(Titulo, {\n        children: \"Cadastre o especialista inserindo os dados abaixo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(ModalCadastro, \"7grOai+9sYrAgH29XAcHmAZTW6A=\", false, function () {\n  return [usePost];\n});\n_c = ModalCadastro;\nexport {};\nvar _c;\n$RefreshReg$(_c, \"ModalCadastro\");","map":{"version":3,"names":["Modal","Titulo","BoxCustomizado","useState","usePost","autenticaStore","jsxDEV","_jsxDEV","ModalCadastro","_ref","_s","open","handleClose","planosSelecionados","setPlanosSelecionados","nome","setNome","email","setEmail","senha","setSenha","senhaVerificada","setSenhaVerificada","possuiPlano","setPossuiPlano","imagem","setImagem","especialidade","setEspecialidade","crm","setCrm","cep","setCep","rua","setRua","numero","setNumero","complemento","setComplemento","estado","setEstado","telefone","setTelefone","label","inputProps","cadastrarDados","usuario","handleChange","event","checkboxValue","target","value","checked","filter","plano","handleSubmit","preventDefault","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maxfaria/Documents/GitHub/voll/web/src/components/ModalCadastro/index.tsx"],"sourcesContent":["import { Modal } from \"@mui/material\";\nimport Titulo from \"../Titulo\";\nimport { BoxCustomizado } from \"./styles\";\nimport { useState } from \"react\";\nimport usePost from \"../../usePost\";\nimport autenticaStore from \"../../stores/autentica.store\";\n\nexport default function ModalCadastro ({open, handleClose}: {open: boolean, handleClose: () => void}) {\n    const [planosSelecionados, setPlanosSelecionados] = useState<string[]>([]);\n    const [nome, setNome] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [senha, setSenha] = useState(\"\");\n    const [senhaVerificada, setSenhaVerificada] = useState(\"\");\n    const [possuiPlano, setPossuiPlano] = useState(false);\n    const [imagem, setImagem] = useState('');\n    const [especialidade, setEspecialidade] = useState(\"\");\n    const [crm, setCrm] = useState(\"\");\n    const [cep, setCep] = useState(\"\");\n    const [rua, setRua] = useState(\"\");\n    const [numero, setNumero] = useState(\"\");\n    const [complemento, setComplemento] = useState(\"\");\n    const [estado, setEstado] = useState(\"\");\n    const [telefone, setTelefone] = useState(\"\");\n    const label = { inputProps: { 'aria-label': 'Atende por plano?' } };\n    const {cadastrarDados} = usePost();\n    const {usuario} = autenticaStore;\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const checkboxValue = event.target.value;\n        if (event.target.checked) {\n            setPlanosSelecionados([...planosSelecionados, checkboxValue]);\n        } else {\n            setPlanosSelecionados(planosSelecionados.filter(plano => plano !== checkboxValue));\n        }\n    };\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n    }\n\n    \n    return (\n        <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"Modal de cadastro do especialista\"\n        aria-describedby=\"Nesse modal terÃ¡ os dados de cadastro do especialista\"\n        >\n            <BoxCustomizado>\n                <Titulo>Cadastre o especialista inserindo os dados abaixo:</Titulo>\n            </BoxCustomizado>\n\n        </Modal>\n    )\n}\n\nexport {}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}