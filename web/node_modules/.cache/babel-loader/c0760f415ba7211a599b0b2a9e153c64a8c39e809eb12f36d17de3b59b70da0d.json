{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function usePost() {\n  _s();\n  const [erro, setErro] = useState('');\n  const [sucesso, setSucesso] = useState(false);\n  const [resposta, setResposta] = useState('');\n  useEffect(() => {\n    console.log('Sucesso atualizado:', sucesso);\n    console.log('Resposta atualizada:', resposta);\n  }, [sucesso, resposta]);\n  async function cadastrarDados(_ref) {\n    let {\n      url,\n      dados,\n      token\n    } = _ref;\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n    try {\n      const res = await fetch(`http://localhost:8080/${url}`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(dados)\n      });\n      setSucesso(true);\n      const respostaConvertida = await res.json();\n      setResposta(respostaConvertida.token);\n      console.log(resposta);\n      return {\n        cadastrarDados,\n        sucesso,\n        erro,\n        resposta\n      };\n    } catch (erro) {\n      setErro('Não foi possível enviar os dados');\n    }\n  }\n}\n_s(usePost, \"eqMXfvDWZ/Ycf8cvLvuA4ZIUdvg=\");","map":{"version":3,"names":["useEffect","useState","usePost","_s","erro","setErro","sucesso","setSucesso","resposta","setResposta","console","log","cadastrarDados","_ref","url","dados","token","headers","res","fetch","method","body","JSON","stringify","respostaConvertida","json"],"sources":["/Users/maxfaria/Documents/GitHub/voll/web/src/usePost.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function usePost() {\n    const [erro, setErro] = useState('');\n    const [sucesso, setSucesso] = useState(false);\n    const [resposta, setResposta] = useState('');\n\n    useEffect(() => {\n        console.log('Sucesso atualizado:', sucesso);\n        console.log('Resposta atualizada:', resposta)\n    }, [sucesso, resposta])\n\n    async function cadastrarDados<T>({url, dados, token} : \n        {url: string, dados: T, token?: string}) {\n            \n            const headers: HeadersInit = {\n                'Content-Type': 'application/json'\n            }\n            if (token) {\n                headers['Authorization'] = `Bearer ${token}`;\n            }\n\n            try {\n            const res = await fetch(`http://localhost:8080/${url}`, {\n                method: 'POST',\n                headers,\n                body: JSON.stringify(dados)\n            })\n            setSucesso(true);\n            const respostaConvertida = await res.json();\n            setResposta(respostaConvertida.token);\n            console.log(resposta)\n\n            return{cadastrarDados, sucesso, erro, resposta}\n        } catch (erro) {\n        setErro('Não foi possível enviar os dados');\n    }\n}\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZU,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEL,OAAO,CAAC;IAC3CI,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,QAAQ,CAAC;EACjD,CAAC,EAAE,CAACF,OAAO,EAAEE,QAAQ,CAAC,CAAC;EAEvB,eAAeI,cAAcA,CAAAC,IAAA,EACgB;IAAA,IADZ;MAACC,GAAG;MAAEC,KAAK;MAAEC;IACJ,CAAC,GAAAH,IAAA;IAEnC,MAAMI,OAAoB,GAAG;MACzB,cAAc,EAAE;IACpB,CAAC;IACD,IAAID,KAAK,EAAE;MACPC,OAAO,CAAC,eAAe,CAAC,GAAI,UAASD,KAAM,EAAC;IAChD;IAEA,IAAI;MACJ,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,yBAAwBL,GAAI,EAAC,EAAE;QACpDM,MAAM,EAAE,MAAM;QACdH,OAAO;QACPI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK;MAC9B,CAAC,CAAC;MACFR,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMiB,kBAAkB,GAAG,MAAMN,GAAG,CAACO,IAAI,EAAE;MAC3ChB,WAAW,CAACe,kBAAkB,CAACR,KAAK,CAAC;MACrCN,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MAErB,OAAM;QAACI,cAAc;QAAEN,OAAO;QAAEF,IAAI;QAAEI;MAAQ,CAAC;IACnD,CAAC,CAAC,OAAOJ,IAAI,EAAE;MACfC,OAAO,CAAC,kCAAkC,CAAC;IAC/C;EACJ;AACA;AAACF,EAAA,CApCuBD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}